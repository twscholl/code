RNBO notes:

-- sample play is not working with p5.js...
    --> got the dependencies to finally work, as well as timing, but samples don't play.
	--> .aif doesn't work in Chrome. Convert to wav.
	
-- synthesized sounds work as do sample saounds in plain p5.js

-- haven't tried timing via transport - maybe that works

1. Using metro and Max timing (e.g. delay, etc.) doesn't work properly via RNBO exported to Web and p5.js. It seemed to be running at around 1/3 of the expected speed. It's best to do timing with audio signals. So, if you want a metro, use a phasor~ feeding a what~ object to generate pulses. You can also use subdiv~ to to divide the signal. 

So: "phasor~ 1.0 --> subdiv~ 8 --> what~" will generate 8 pulses per second. These pulses can be used to trigger various things.

2. buffer~ in a rnbo~ object needs the @file atribute in order to set paths up properly upon export. Samples will be put in a media folder and the dependencies.json file will show the path and file name.

3. In p5.js, use sound library 1.01. 1.02 is a test version and the function "loadSound()" doesn't work. Coming soon: the sound library will be incorporated in the main p5.js library. Easiest is to use Visual Studio Code with the p5.js and Live Server extensions to create a new p5.js project using the extension. This will add local libraries for p5 and p5.sound. You can use the online libraries, but the link is not dynamic, the script tqg points to specific versions in fixed folders, so updates, improvements, and bug fixes won't be incorporated.

4. Variables from p5.js to rnbo seem to need to be normalized (0.-1.) in p5.js before being sent to rnbo. Once in rnbo, the actual values seem to be handled via the param functions. Locally, witing Max, param functions take the usual values of things (100-5000, for example), but from p5.js variables range from 0.-1. and then go into rnbo and are converted to values like 100-5000.

There's also a special function that is needed. Not sure what this is all about yet:

	if (x) {
      x.normalizedValue = xVal;
	}
